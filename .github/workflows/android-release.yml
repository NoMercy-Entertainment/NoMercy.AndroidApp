name: Android Release & Download Page

on:
  push:
    branches:
      - master

jobs:
  build-release-and-pages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifact: [apk, aab]
    permissions:
      contents: write
      pages: write
      id-token: write

    outputs:
      VERSION_NAME: ${{ steps.set_version.outputs.VERSION_NAME }}
      APK_URL: ${{ steps.get_release.outputs.apk_url }}
      AAB_URL: ${{ steps.get_release.outputs.aab_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          repository: NoMercy-Entertainment/NoMercy.AndroidApp

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set Android versionCode and versionName
        id: set_version
        run: |
          VERSION_CODE=${{ github.run_number }}
          DATE=$(date +"%Y.%m.%d")
          EXTRA_VERSION=$(git tag --list "v${DATE}-*" | wc -l)
          if [ "$EXTRA_VERSION" -gt 0 ]; then
            VERSION_NAME="${DATE}-$((EXTRA_VERSION + 1))"
          else
            VERSION_NAME="${DATE}"
          fi
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_OUTPUT
          sed -i "s/versionCode = [0-9]\+/versionCode = $VERSION_CODE/" app/build.gradle.kts
          sed -i "s/versionName = \".*\"/versionName = \"$VERSION_NAME\"/" app/build.gradle.kts

      - name: Build ${{ matrix.artifact }}
        run: |
          chmod +x ./gradlew
          if [ "${{ matrix.artifact }}" == "apk" ]; then
            ./gradlew assembleRelease --stacktrace
          else
            ./gradlew bundleRelease --stacktrace
          fi

      - name: Zipalign ${{ matrix.artifact }}
        run: |
          sudo apt-get update && sudo apt-get install -y zipalign
          if [ "${{ matrix.artifact }}" == "apk" ]; then
            zipalign -v 4 \
              app/build/outputs/apk/release/app-release-unsigned.apk \
              app/build/outputs/apk/release/app-release-aligned.apk
          elif [ "${{ matrix.artifact }}" == "aab" ]; then
            zipalign -v 4 \
              app/build/outputs/bundle/release/app-release.aab \
              app/build/outputs/bundle/release/app-release-aligned.aab
          fi

      - name: Sign ${{ matrix.artifact }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          if [ "${{ matrix.artifact }}" == "apk" ]; then
            apksigner sign --ks keystore.jks --ks-key-alias ${{ secrets.KEY_ALIAS }} --ks-pass pass:${{ secrets.KEYSTORE_PASSWORD }} app/build/outputs/apk/release/app-release-aligned.apk
          else
            jarsigner -verbose -keystore keystore.jks -storepass $KEYSTORE_PASSWORD \
              app/build/outputs/bundle/release/app-release-aligned.aab ${{ secrets.KEY_ALIAS }}
          fi

      - name: Verify ${{ matrix.artifact }}
        run: |
          if [ "${{ matrix.artifact }}" == "apk" ]; then
            apksigner verify app/build/outputs/apk/release/app-release-aligned.apk
          else
            jarsigner -verify -verbose -certs app/build/outputs/bundle/release/app-release-aligned.aab
          fi

      - name: Get latest release info
        id: get_release
        run: |
          LATEST_JSON=$(curl -s https://api.github.com/repos/NoMercy-Entertainment/NoMercy.AndroidApp/releases/latest)
          APK_URL=$(echo "$LATEST_JSON" | jq -r '.assets[] | select(.name | endswith(".apk")) | .browser_download_url')
          VERSION="v1.0.${{ github.run_number }}"
          RELEASE_DATE=$(echo "$LATEST_JSON" | jq -r '.published_at' | cut -d'T' -f1)
          CHANGELOG=$(echo "$LATEST_JSON" | jq -r '.body' | awk 'NF' | sed 's/^/- /' | sed ':a;N;$!ba;s/\n/\n/g' | sed 's/^-/<li>/;s/$/<\/li>/')
          APP_BANNER_ICON_URL="https://raw.githubusercontent.com/NoMercy-Entertainment/NoMercyMediaServer/master/src/NoMercy.Server/Assets/logo.png"
          APP_ICON_URL="https://raw.githubusercontent.com/NoMercy-Entertainment/NoMercyMediaServer/master/src/NoMercy.Server/Assets/Linux/icon.png"
          echo "apk_url=$APK_URL" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "release_date=$RELEASE_DATE" >> $GITHUB_OUTPUT
          echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT
          echo "app_icon_url=$APP_ICON_URL" >> $GITHUB_OUTPUT
          echo "app_banner_icon_url=$APP_BANNER_ICON_URL" >> $GITHUB_OUTPUT

      - name: Get APK and AAB info
        id: artifact_info
        run: |
          if [ -f app/build/outputs/apk/release/app-release-aligned.apk ]; then
            FILE=app/build/outputs/apk/release/app-release-aligned.apk
          elif [ -f app/build/outputs/bundle/release/app-release-aligned.aab ]; then
            FILE=app/build/outputs/bundle/release/app-release-aligned.aab
          else
            echo "No APK or AAB file found." >&2
            exit 1
          fi
          echo "artifact_size=$(du -h $FILE | cut -f1)" >> $GITHUB_OUTPUT
          echo "artifact_sha256=$(sha256sum $FILE | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Prepare download page
        run: |
          cp download.html index.html
          sed -i "s|{{APK_URL}}|${{ steps.get_release.outputs.apk_url }}|g" index.html
          sed -i "s|{{VERSION}}|${{ steps.get_release.outputs.version }}|g" index.html
          sed -i "s|{{RELEASE_DATE}}|${{ steps.get_release.outputs.release_date }}|g" index.html
          sed -i "s|{{APK_SIZE}}|${{ steps.artifact_info.outputs.artifact_size }}|g" index.html
          sed -i "s|{{APK_SHA256}}|${{ steps.artifact_info.outputs.artifact_sha256 }}|g" index.html
          sed -i "s|{{APP_ICON_URL}}|${{ steps.get_release.outputs.app_icon_url }}|g" index.html
          sed -i "s|{{APP_BANNER_ICON_URL}}|${{ steps.get_release.outputs.app_banner_icon_url }}|g" index.html
          sed -i "s|{{CHANGELOG}}|${{ steps.get_release.outputs.changelog }}|g" index.html
          # Only keep the processed index.html for deployment
          find . -maxdepth 1 ! -name 'index.html' ! -name '.' -exec rm -rf {} +

  post-build:
    needs: build-release-and-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Append version to APK and AAB filenames
        run: |
          mv app/build/outputs/apk/release/app-release-aligned.apk app/build/outputs/apk/release/app-release-aligned-${{ needs.build-release-and-pages.outputs.VERSION_NAME }}.apk
          mv app/build/outputs/bundle/release/app-release-aligned.aab app/build/outputs/bundle/release/app-release-${{ needs.build-release-and-pages.outputs.VERSION_NAME }}.aab

      - name: Update GitHub Release with versioned filenames
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/build/outputs/apk/release/app-release-aligned-${{ needs.build-release-and-pages.outputs.VERSION_NAME }}.apk
            app/build/outputs/bundle/release/app-release-${{ needs.build-release-and-pages.outputs.VERSION_NAME }}.aab
          tag_name: v${{ needs.build-release-and-pages.outputs.VERSION_NAME }}
          name: "Release v${{ needs.build-release-and-pages.outputs.VERSION_NAME }}"
          body: |
            Automated release for build ${{ needs.build-release-and-pages.outputs.VERSION_NAME }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare download page
        run: |
          cp download.html index.html
          sed -i "s|{{APK_URL}}|${{ needs.build-release-and-pages.outputs.APK_URL }}|g" index.html
          sed -i "s|{{VERSION}}|${{ needs.build-release-and-pages.outputs.VERSION_NAME }}|g" index.html
          # Additional replacements for other placeholders

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
          keep_files: false
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
          force_orphan: true
          enable_jekyll: false
